@using StockPortfolio.Components.Charts
@using StockPortfolio.Extensions

<style>
    .summary-container{
        margin-bottom: 1.5rem;
    }
    
    .summary-wrap{
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        align-items: flex-end;
    }

    .summary-block{
        display: flex;
        flex-direction: column;
        text-align: left;
        justify-content: space-between;
        margin: 1.5rem;
        margin-bottom: 0.25rem;
    }

    .inline-wrap{
        display: inline-flex;
        align-items: flex-end;
        gap: 1.5rem;
    }

    .lightshadow{
        text-shadow: 0px 0px 3px rgba(117, 117, 117, 0.12);
    }
    
    .logo-wrap{
        width: 128px;
        height: 128px;
        display: none;
        border-width: 3px;
        border-color: #93C5FD;
    }

    .logo-wrap:hover{
        border-color: #3B82F6;
    }

    @* @@media screen and (max-width: 1400px){
        .summary-wrap{
            flex-direction: column; 
        }
    } *@

    @@media screen and (max-width: 1500px){
        .summary-wrap{
            display: grid;
            grid-template-columns: 1fr;
            grid-template-rows: 1fr 1fr;
            grid-template-areas:
            "main-info"
            "extra-info";
        }
    }

    .main-info{
        float: left;
        grid-area: main-info;
    }

    .extra-info{
        width: 100%;
        display: flex;
        flex-direction: row;
        justify-content: space-evenly;
        grid-area: extra-info;
    }

    @@media screen and (min-width: 768px){
        .logo-wrap{
            display: block;
        }
    }
    @@media screen and (max-width: 768px){
        
        .extra-info{
            flex-direction: column;
            text-align: center;
            justify-content: center;
            align-items: center;
            margin: auto;
        }
    }

</style>

@if (StockToVisualize is null)
{
    @NullDataPlaceholder
}
else
{
    string summaryColor = StockToVisualize.IsDayChangePositive ? "green-400" : "red-400";
    string borderColor = StockToVisualize.IsDayChangePositive ? "border-green-400" : "border-red-400"; //idk why but concatenation doesnt work with border (with text- everything goes well)
    <div class="py-2 px-4 md:px-12">
        <div class="summary-container lightshadow"> 
            <div class="summary-wrap font-roboto border-b-4 @borderColor">
                <div class="flex flex-row main-info">
                    @if(ShowLogo && StockToVisualize.LogoImageURL != null && StockToVisualize.LogoImageURL.Length > 0)
                    {
                        <div class="logo-wrap rounded-3xl m-6 mb-1 mr-0">
                            <a href="@StockToVisualize.OfficialURL" target="_blank" title="official site">
                                <img class="rounded-3xl" src="@StockToVisualize.LogoImageURL" alt="company logo" />
                            </a>
                        </div>
                    }
                    <div class="summary-block">
                        <div class="mb-8">
                            <i class="font-semibold text-xl">@($"{StockToVisualize.Name} ({StockToVisualize.Symbol})")</i>
                        </div>
                        <div class="inline-wrap">
                            <strong class="font-extrabold text-2xl sm:text-4xl md:text-6xl">$@StockToVisualize.Price.ToString().Replace(',','.')</strong>
                            <p class="font-bold text-@summaryColor text-xl sm:text-2xl md:text-3xl">@StockToVisualize.DayChange.ToString(false, true).Replace(',', '.')</p> 
                            <p class="font-bold text-@summaryColor text-xl sm:text-2xl md:text-3xl">(@StockToVisualize.ChangePercentage.ToString(false,true).Replace(',', '.')%)</p>
                        </div>
                    </div>
                </div>

                <div class="extra-info">
                    <div class="summary-block text-base sm:text-xl lg:text-2xl">
                        <span class="inline-wrap">Market Cap:<p class="font-bold">@StockToVisualize.MarketCap.ToString(true)</p></span>
                        <span class="inline-wrap">Volume avg:<p class="font-bold">@StockToVisualize.VolumeAvg</p></span>
                        <span class="inline-wrap">PE index:<p class="font-bold">@StockToVisualize.PricePerEarningRatio</p></span>
                    </div>

                    <div class="summary-block text-base sm:text-xl lg:text-2xl">
                        <span class="inline-wrap">Ceo:<p class="font-bold">@StockToVisualize.Ceo</p></span>
                        <span class="inline-wrap">Industry:<p class="font-bold">@StockToVisualize.Industry</p></span>
                        <span class="inline-wrap">FullTimeEmployees:<p class="font-bold">@StockToVisualize.FullTimeEmployees</p></span>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="border border-light-secondary-300"> 
            <ChartNavigation @bind-ChartType="@chartType"
                             @bind-ActiveTimeFilter="@timeFilter"
                             @bind-ActiveIntervalFilter="@intervalFilter"/>
            <MainChart ChartData="@StockDetails" ChartType="@chartType" IntervalFilter="@intervalFilter" ChartLabelStep="4" />
        </div>
    </div>
}