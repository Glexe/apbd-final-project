// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StockPortfolio.Server.Contexts;

namespace StockPortfolio.Server.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20210615093834_AddedSeveralFieldsToStockModel")]
    partial class AddedSeveralFieldsToStockModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StockPortfolio.Models.Stock", b =>
                {
                    b.Property<int>("StockID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ceo")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<decimal>("ChangePercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DayChange")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("FullTimeEmployees")
                        .HasColumnType("int");

                    b.Property<string>("Industry")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LogoImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MarketCap")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("OfficialURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PricePerEarningRatio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<decimal>("VolumeAvg")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("StockID")
                        .HasName("Stock_PK");

                    b.ToTable("Stock");
                });

            modelBuilder.Entity("StockPortfolio.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CredentialsID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("RefreshToken")
                        .HasMaxLength(64)
                        .HasColumnType("varbinary(64)");

                    b.Property<DateTime?>("RefreshTokenExpirationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("UserID")
                        .HasName("User_PK");

                    b.HasIndex("CredentialsID")
                        .IsUnique();

                    b.ToTable("User");
                });

            modelBuilder.Entity("StockPortfolio.Models.UserCredentials", b =>
                {
                    b.Property<int>("UserCredentialsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("PasswordHashed")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varbinary(256)");

                    b.Property<byte[]>("Salt")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varbinary(64)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("UserCredentialsID")
                        .HasName("UserCredentials_PK");

                    b.ToTable("UserCredentials");
                });

            modelBuilder.Entity("StockPortfolio.Models.User_Stock", b =>
                {
                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<int>("StockID")
                        .HasColumnType("int");

                    b.Property<int>("StockReferenceStockID")
                        .HasColumnType("int");

                    b.HasKey("UserID", "StockID")
                        .HasName("User_Stock_PK");

                    b.HasIndex("StockID");

                    b.HasIndex("StockReferenceStockID");

                    b.ToTable("User_Stock");
                });

            modelBuilder.Entity("StockPortfolio.Models.User", b =>
                {
                    b.HasOne("StockPortfolio.Models.UserCredentials", "Credentials")
                        .WithOne("UserReference")
                        .HasForeignKey("StockPortfolio.Models.User", "CredentialsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Credentials");
                });

            modelBuilder.Entity("StockPortfolio.Models.User_Stock", b =>
                {
                    b.HasOne("StockPortfolio.Models.User", "UserReference")
                        .WithMany("User_Stocks")
                        .HasForeignKey("StockID")
                        .HasConstraintName("User_Stock_Stock")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StockPortfolio.Models.Stock", "StockReference")
                        .WithMany("User_Stocks")
                        .HasForeignKey("StockReferenceStockID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StockReference");

                    b.Navigation("UserReference");
                });

            modelBuilder.Entity("StockPortfolio.Models.Stock", b =>
                {
                    b.Navigation("User_Stocks");
                });

            modelBuilder.Entity("StockPortfolio.Models.User", b =>
                {
                    b.Navigation("User_Stocks");
                });

            modelBuilder.Entity("StockPortfolio.Models.UserCredentials", b =>
                {
                    b.Navigation("UserReference");
                });
#pragma warning restore 612, 618
        }
    }
}
